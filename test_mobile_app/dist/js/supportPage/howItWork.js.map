{"version":3,"sources":["webpack:///./src/howItWork.js","webpack:///./src/modules/customSlider.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;AAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,8BAA8B,0CAA0C,EAAE,aAAa;AACvF,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,IAAI,SAAS,EAAE;AACrE,SAAS;AACT,qCAAqC,iDAAiD,GAAG,aAAa;AACtG;AACA,8BAA8B,iEAAiE;AAC/F;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,iEAAY;AAChB;AACA;AACA,CAAC,E;;;;;;;;;;;;;;ACxKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mDAAmD,2DAA2D;AAC9G;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mDAAmD,2DAA2D;AAC9G;AACA,SAAS;AACT,mDAAmD,iDAAiD;AACpG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,gCAAgC;AAC/D;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA,iEAAe,YAAY,E;;;;;;UCrJ3B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"howItWork.js","sourcesContent":["import customSlider from './modules/customSlider.js';\r\n\r\nconst rangeInit = () => {\r\n    let wrapp = document.querySelector('.income'),\r\n        input1 = wrapp.querySelector('.first .input input'),\r\n        inputLabel1 = wrapp.querySelector('.first .inputTextNumber'),\r\n        inputLabel1Num = wrapp.querySelector('.first .inputTextNumber .num'),\r\n        input2 = wrapp.querySelector('.second .input input'),\r\n        inputLabel2 = wrapp.querySelector('.second .inputTextNumber'),\r\n        inputLabel2Num = wrapp.querySelector('.second .inputTextNumber .num'),\r\n        changeCurrBtns = wrapp.querySelectorAll('.buttons .btn');\r\n    \r\n    // here need add current exchange rate\r\n    let currValues ={\r\n        usd: {\r\n            rate: 1,\r\n            icon: '$'\r\n        },\r\n        rub: {\r\n            rate: 74.98,\r\n            icon: '₽'\r\n        },\r\n        euro: {\r\n            rate: 0.82,\r\n            icon: '€'\r\n        }\r\n    };\r\n\r\n    let currItem = currValues.usd;\r\n    \r\n    let current = {\r\n        rate: currItem.rate,\r\n        icon: currItem.icon\r\n    };\r\n\r\n    let moneyValue = {\r\n        0: 4.99,\r\n        1: 27.49,\r\n        2: 49.99,\r\n        3: 72.49,\r\n        4: 94.99\r\n    };\r\n\r\n    console.log(moneyValue[0] * currItem.rate);\r\n    input2.setAttribute('data-start-value', moneyValue[0] * currItem.rate);\r\n\r\n    const setStepPrice = () => {\r\n        let stepWrapp = wrapp.querySelector('.second .stepsValue'),\r\n            val1 = stepWrapp.querySelector('.first'),\r\n            val2 = stepWrapp.querySelector('.second'),\r\n            val3 = stepWrapp.querySelector('.third'),\r\n            val4 = stepWrapp.querySelector('.four'),\r\n            val5 = stepWrapp.querySelector('.five');\r\n        const values = [val1, val2, val3, val4, val5];\r\n\r\n        console.log(current);\r\n\r\n        values.forEach((el, i) => {\r\n            el.innerHTML = `${(moneyValue[i] * current.rate).toFixed(2)}${current.icon}`;\r\n        });\r\n    };\r\n    setStepPrice();\r\n\r\n    const setLabel = (input, label, labelText, step, type) => {\r\n        let newStr = ((+input.value * step) * current.rate).toString(),\r\n            onePercent = input.parentNode.offsetWidth / 100;\r\n        if (type === 'number') {\r\n            console.log(current);\r\n            console.log(current.icon);\r\n            labelText.innerHTML = newStr.replace(/(\\d{1,3})(?=((\\d{3})*)$)/g, \" $1\");\r\n        } else if (type === 'curr') {\r\n            labelText.innerHTML = `${(+newStr + +input.dataset.startValue).toFixed(2)} ${current.icon}`;\r\n        }\r\n        label.style.left = `${(input.value * 5 + 0.5) - ((label.offsetWidth / 2) / onePercent)}%`;\r\n    };\r\n\r\n    const setValue = (input, label, labelText, value, step, type) => {\r\n        input.value = value;\r\n        setLabel(input, label, labelText, step, type);\r\n    };\r\n    setValue(input1, inputLabel1, inputLabel1Num, 10, input1.dataset.move, 'number');\r\n    setValue(input2, inputLabel2, inputLabel2Num, 10, input2.dataset.move, 'curr');\r\n\r\n    const changeNumbers = (val1, val2) => {\r\n        let startOld = wrapp.querySelector('.startOld'),\r\n            endOld = wrapp.querySelector('.endOld'),\r\n            startNew = wrapp.querySelector('.startNew'),\r\n            endNew = wrapp.querySelector('.endNew'),\r\n            currValue = ((+input2.dataset.move * val2) + +input2.dataset.startValue) * current.rate,\r\n            subValue = (+input1.dataset.move * val1),\r\n            oldValFrom = (((subValue / 100) * 1) * currValue).toFixed(0),\r\n            oldValTo = (((subValue / 100) * 5) * currValue).toFixed(0),\r\n            newValFrom = (((subValue / 100) * 4) * currValue).toFixed(0),\r\n            newValTo = (((subValue / 100) * 9) * currValue).toFixed(0);\r\n        startOld.innerHTML = oldValFrom + current.icon;\r\n        endOld.innerHTML = oldValTo + current.icon;\r\n        startNew.innerHTML = newValFrom + current.icon;\r\n        endNew.innerHTML = newValTo + current.icon;\r\n    };\r\n    changeNumbers(input1.value, input2.value);\r\n\r\n    const btnClick = (n) => {\r\n        changeCurrBtns.forEach((el, i) => {\r\n            el.classList.remove('active');\r\n            if (n === i) {\r\n                el.classList.add('active');\r\n            }\r\n        });\r\n        current = {\r\n            rate: currValues[Object.keys(currValues)[n]].rate,\r\n            icon: currValues[Object.keys(currValues)[n]].icon\r\n        };\r\n        currItem = currValues[Object.keys(currValues)[n]];\r\n        input2.setAttribute('data-start-value', moneyValue[0] * currItem.rate);\r\n        setValue(input2, inputLabel2, inputLabel2Num, 10, input2.dataset.move, 'curr');\r\n        changeNumbers(input1.value, input2.value);\r\n        changeNumbers(input1.value, input2.value);\r\n        setStepPrice();\r\n    };\r\n\r\n    changeCurrBtns.forEach((el, i) => {\r\n        el.addEventListener('click', () => {\r\n            btnClick(i);\r\n        });\r\n    });\r\n\r\n    input1.addEventListener('input', () => {\r\n        setLabel(input1, inputLabel1, inputLabel1Num, input1.dataset.move, 'number');\r\n        changeNumbers(input1.value, input2.value);\r\n    });\r\n    input2.addEventListener('input', () => {\r\n        setLabel(input2, inputLabel2, inputLabel2Num, input2.dataset.move, 'curr');\r\n        changeNumbers(input1.value, input2.value);\r\n    });\r\n};\r\n\r\nconst observe = () => {\r\n    let targetObserve = document.querySelector('.workSlider .sliderInner'),\r\n        targetChange = document.querySelector('.workSlider .sliderText'),\r\n        textItems = targetChange.querySelectorAll('.textItem'),\r\n        currNumber = 0;\r\n\r\n    const change = (n) => {\r\n        textItems.forEach(el => {\r\n            el.classList.remove('active');\r\n        });\r\n        textItems[n].classList.add('active');\r\n    };\r\n    \r\n    const observer = new MutationObserver(function (mutationsList) {\r\n        for (let mutation of mutationsList) {\r\n            if (mutation.attributeName === 'data-slide') {\r\n                currNumber = mutation.target.dataset.slide;\r\n                change(currNumber);\r\n            }\r\n        };\r\n    });\r\n    const config = {\r\n        attributes: true,\r\n        subtree: true\r\n    };\r\n    observer.observe(targetObserve, config);\r\n};\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    customSlider('.workSlider', '.sliderWrapp', '.sliderInner', '.item', false, -15, 100);\r\n    observe();\r\n    rangeInit();\r\n});","const customSlider = (sliderSelector, wrappSelector, sliderInnerSelector, itemSelector, dots, padding = 0, stepWidht = 100) => {\r\n    let slider = document.querySelector(sliderSelector),\r\n        wrap = slider.querySelector(wrappSelector),\r\n        inner = slider.querySelector(sliderInnerSelector),\r\n        items = slider.querySelectorAll(itemSelector),\r\n        itemWidth = null,\r\n        windowWidth = document.body.offsetWidth,\r\n        currentSlide = 0,\r\n        pd = padding;\r\n\r\n    inner.setAttribute('data-slide', 0);\r\n\r\n    const changeDot = (n) => {\r\n        if (wrap.querySelector('.dotsArea')) {\r\n            let dots = wrap.querySelectorAll('.dot');\r\n            dots.forEach((el, i) => {\r\n                el.classList.remove('active');\r\n                if (i === n) {\r\n                    el.classList.add('active');\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const move = (dir) => {\r\n        let newPd = pd * -1;\r\n        if (dir === 'left') {\r\n            if (currentSlide >= items.length - 1) {\r\n                currentSlide = items.length - 1;\r\n            } else {\r\n                currentSlide += 1;\r\n            }\r\n            changeDot(currentSlide);\r\n            inner.style.transform = `translateX(-${((+itemWidth + newPd) * +currentSlide) * (stepWidht / 100)}px)`;\r\n            inner.setAttribute('data-slide', currentSlide);\r\n        } else if (dir === 'right') {\r\n            if (currentSlide <= 0) {\r\n                currentSlide = 0;\r\n            } else {\r\n                currentSlide -= 1;\r\n            }\r\n            changeDot(currentSlide);\r\n            inner.style.transform = `translateX(-${((+itemWidth + newPd) * +currentSlide) * (stepWidht / 100)}px)`;\r\n            inner.setAttribute('data-slide', currentSlide);\r\n        } else if (typeof(dir) === 'number') {\r\n            inner.style.transform = `translateX(-${((+itemWidth + newPd) * dir) * (stepWidht / 100)}px)`;\r\n            inner.setAttribute('data-slide', dir);\r\n        }\r\n    };\r\n\r\n    const dotsClick = () => {\r\n        if (wrap.querySelector('.dotsArea')) {\r\n            let dots = wrap.querySelectorAll('.dot');\r\n            dots.forEach(el => {\r\n                el.addEventListener('click', () => {\r\n                    changeDot(+el.dataset.dot);\r\n                    move(+el.dataset.dot);\r\n                });\r\n            });\r\n        }\r\n    };\r\n    \r\n    let xDown = null;\r\n\r\n    const getTouches = (evt) => {\r\n        return evt.touches || evt.originalEvent.touches;\r\n    }\r\n\r\n    const handleTouchStart = (evt) => {\r\n        const firstTouch = getTouches(evt)[0];\r\n        xDown = firstTouch.clientX;\r\n    };\r\n\r\n    const handleTouchMove = (evt) => {\r\n        if (!xDown) {\r\n            return;\r\n        }\r\n\r\n        let xUp = evt.touches[0].clientX,\r\n            xDiff = xDown - xUp;\r\n\r\n        if (Math.abs(xDiff)) {\r\n            if (xDiff > 0) {\r\n                move('left');\r\n            } else {\r\n                move('right');\r\n            }\r\n        }\r\n        xDown = null;\r\n    };\r\n\r\n    const start = () => {\r\n        items.forEach(el => {\r\n            el.addEventListener('touchstart', handleTouchStart, false);\r\n        });\r\n        items.forEach(el => {\r\n            el.addEventListener('touchmove', handleTouchMove, false);\r\n        });\r\n    };\r\n\r\n    const disable = () => {\r\n        items.forEach(el => {\r\n            el.removeEventListener('touchstart', handleTouchStart, false);\r\n        });\r\n        items.forEach(el => {\r\n            el.removeEventListener('touchmove', handleTouchMove, false);\r\n        });\r\n        inner.style.transform = 'translateX(0)';\r\n    };\r\n\r\n    const events = () => {\r\n        if (((+itemWidth + pd) * +items.length + pd) >= +windowWidth) {\r\n            start();\r\n        } else {\r\n            disable();\r\n        }\r\n    };\r\n\r\n    const init = () => {\r\n        itemWidth = items[0].offsetWidth;\r\n        windowWidth = document.body.offsetWidth;\r\n        inner.style.width = `${(itemWidth + pd) * items.length}px`;\r\n        events();\r\n    }\r\n    init();\r\n\r\n    if (dots === true) {\r\n        let dotsArea = document.createElement('div');\r\n        dotsArea.classList.add('dotsArea');\r\n\r\n        for (let i = 0; i < items.length; i++) {\r\n            let dot = document.createElement('div');\r\n            dot.classList.add('dot');\r\n            if (i === 0) {\r\n                dot.classList.add('active');\r\n            }\r\n            dot.setAttribute('data-dot', i);\r\n            dotsArea.append(dot);\r\n        }\r\n\r\n        wrap.append(dotsArea);\r\n        dotsClick();\r\n    }\r\n\r\n    window.addEventListener('resize', () => {\r\n        init();\r\n    });\r\n};\r\n\r\nexport default customSlider;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/howItWork.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}